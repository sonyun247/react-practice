{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Header","styled","header","Lists","ul","List","li","props","current","LinkStyle","Link","withRouter","pathname","location","to","api","axios","create","baseURL","params","api_key","language","movieApi","get","id","append_to_response","word","query","tvApi","Container","div","Title","span","Grid","Section","title","children","grow","keyframes","Circle","InnerCircle","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","require","role","aria-label","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","Loader","map","movie","poster_path","vote_average","release_date","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","airingToday","tv","name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchWord","handleSubmit","updateWord","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","console","log","searching","target","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","resetCss","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.783b161c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import styled from \"styled-components\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nconst Header = styled.header`\n    z-index:99;\n    position:fixed;\n    top:0;\n    left:0;\n    width:100%;\n    height:50px;\n    display:flex;\n    align-items:center;\n    background-color:rgba(20,20,20,1);\n    box-shadow: 0px 1px 5px 2px rgba(0,0,0,0.8);\n`;\nconst Lists = styled.ul`\n    display:flex;\n`;\nconst List = styled.li`\n    width:80px;\n    height:50px;\n    text-align:center;\n    border-bottom:3px solid ${props => (props.current ? \"red\" : \"transparent\")};\n    transition: border-bottom .5s ease-out;\n`;\nconst LinkStyle = styled(Link)`\n    height:50px;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n    <Header>\n        <Lists>\n            <List current={pathname === \"/\"}>\n                <LinkStyle to=\"/\">Home</LinkStyle>\n            </List>\n            <List current={pathname === \"/tv\"}>\n                <LinkStyle to=\"/tv\">TV</LinkStyle>\n            </List>\n            <List current={pathname === \"/search\"}>\n                <LinkStyle to=\"/search\">Search</LinkStyle>\n            </List>\n        </Lists>\n    </Header >\n)\n);","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"93c8583b27f220b561ce13f269823d8b\",\n        language: \"ko-KR\"\n    }\n});\n\nexport const movieApi = {\n    popular: () => api.get(\"movie/popular\"),\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    detail: id => api.get(`movie/${id}`, {\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: word => api.get(\"search/movie\", {\n        params: {\n            query: word\n        }\n    })\n};\n\nexport const tvApi = {\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    detail: id => api.get(`tv/${id}`, {\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: word => api.get(\"search/tv\", {\n        params: {\n            query: word\n        }\n    })\n};\n","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    :not(:last-child){\n        margin-bottom:50px;\n    }\n`;\nconst Title = styled.span`\n    font-size:14px;\n    font-weight:600;\n`;\nconst Grid = styled.div`\n    margin-top:25px;\n    display:grid;\n    grid-template-columns:repeat(auto-fill,120px);\n    grid-gap:20px;\n`;\n\nconst Section = ({ title, children }) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n)\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Section;","import styled, { keyframes } from \"styled-components\";\nconst grow = keyframes`\n  0% {\n    transform: scale(0.2);\n    opacity: 1;\n  }\n  20% {\n    transform: scale(0.7);\n    opacity: 0.7;\n  }\n  40% {\n    transform: scale(1.3);\n    opacity: 0.5;\n  }\n  60% {\n    transform: scale(1.8);\n    opacity: 0.3;\n  }\n  80% {\n    transform: scale(2.3);\n    opacity: 0.1;\n  }\n  100% {\n    transform: scale(2.8);\n    opacity: 0;\n  }\n}`;\nconst Container = styled.div`\n    height:100vh;\n    width:100vw;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    font-size:48px;\n    animation: ${grow} 1.5s linear infinite;\n`;\nconst Circle = styled.div`\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    background: red;\n    width: 5vh;\n    height: 5vh;\n    border-radius: 50%;\n`;\nconst InnerCircle = styled.div`\n    z-index:99;\n    background-color:rgba(20,20,20,1);\n    width: 4vh;\n    height: 4vh;\n    border-radius: 50%;\n`;\n\nexport default () => (\n    <Container>\n        <Circle><InnerCircle></InnerCircle></Circle>\n    </Container>\n)","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    display:flex;\n    justify-content:center;\n    width:100%;\n`;\nconst Text = styled.span`\n    color: ${props => props.color};\n    font-size:50px;\n`;\n\nconst Message = ({ text, color }) => (\n    <Container>\n        <Text color={color}>{text}</Text>\n    </Container>\n)\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n}\n\nexport default Message;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) =>\n    <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image\n                    bgUrl={\n                        imageUrl\n                            ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n                            : require(\"../assets/noPosterSmall.png\")\n                    }\n                />\n                <Rating>\n                    <span role=\"img\" aria-label=\"rating\">⭐️</span>\n                    {rating}/10\n                </Rating>\n            </ImageContainer>\n            <Title>\n                {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n            </Title>\n            <Year>{year}</Year>\n        </Container>\n    </Link>\n\nPoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool\n}\n\nexport default Poster;","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n    padding:10px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\n    <>\n        <Helmet>\n            <title>Movie | JayTV</title>\n        </Helmet>\n        {loading ? <Loader /> : (\n            <Container>\n                {nowPlaying && nowPlaying.length > 0 && (\n                    <Section title=\"Now Playing Movies\">\n                        {nowPlaying.map(movie => (<Poster\n                            key={movie.id}\n                            id={movie.id}\n                            imageUrl={movie.poster_path}\n                            title={movie.title}\n                            rating={movie.vote_average}\n                            year={movie.release_date.substring(0, 4)}\n                            isMovie={true}\n                        />))}\n                    </Section>\n                )}\n                {upcoming && upcoming.length > 0 && (\n                    <Section title=\"Upcoming Movies\">\n                        {upcoming.map(movie => (<Poster\n                            key={movie.id}\n                            id={movie.id}\n                            imageUrl={movie.poster_path}\n                            title={movie.title}\n                            rating={movie.vote_average}\n                            year={movie.release_date.substring(0, 4)}\n                            isMovie={true}\n                        />))}\n                    </Section>\n                )}\n                {popular && popular.length > 0 && (\n                    <Section title=\"Popular Movies\">\n                        {popular.map(movie => (<Poster\n                            key={movie.id}\n                            id={movie.id}\n                            imageUrl={movie.poster_path}\n                            title={movie.title}\n                            rating={movie.vote_average}\n                            year={movie.release_date.substring(0, 4)}\n                            isMovie={true}\n                        />))}\n                    </Section>\n                )}\n                {error && <Message color=\"red\" text={error} />}\n            </Container>\n        )}</>);\n\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    upcoming: PropTypes.array,\n    popular: PropTypes.array,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired\n}\n\nexport default HomePresenter;","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import { movieApi } from \"api\";\nimport React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\n\nexport default class extends React.Component {\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true\n    }\n\n    async componentDidMount() {\n        try {\n            const { data: { results: popular } } = await movieApi.popular();\n            const { data: { results: nowPlaying } } = await movieApi.nowPlaying();\n            const { data: { results: upcoming } } = await movieApi.upcoming();\n            this.setState({ popular, nowPlaying, upcoming });\n        } catch {\n            this.setState({ error: \"Can't find it\" });\n        } finally {\n            this.setState({ loading: false });\n        }\n    }\n\n    render() {\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        return (\n            <HomePresenter\n                nowPlaying={nowPlaying}\n                upcoming={upcoming}\n                popular={popular}\n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n    padding:10px;\n`;\n\nconst TVPresenter = ({ popular, airingToday, loading, error }) => (<>\n    <Helmet><title>TV | JayTV</title></Helmet>\n    {loading ? <Loader /> : (\n        <Container>\n            {popular && popular.length > 0 && (\n                <Section title=\"Popular TV Shows\">\n                    {popular.map(tv => (<Poster key={tv.id}\n                        id={tv.id}\n                        imageUrl={tv.poster_path}\n                        title={tv.name}\n                        rating={tv.vote_average}\n                        year={tv.first_air_date.substring(0, 4)}\n                    />))}\n                </Section>\n            )}\n            {airingToday && airingToday.length > 0 && (\n                <Section title=\"Airing Today TV Shows\">\n                    {airingToday.map(tv => (<Poster key={tv.id}\n                        id={tv.id}\n                        imageUrl={tv.poster_path}\n                        title={tv.name}\n                        rating={tv.vote_average}\n                        year={tv.first_air_date.substring(0, 4)}\n                    />))}\n                </Section>\n            )}\n            {error && <Message color=\"red\" text={error} />}\n        </Container>\n    )}</>)\n\nTVPresenter.propTypes = {\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n}\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import { tvApi } from \"api\";\nimport React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\n\nexport default class extends React.Component {\n    state = {\n        popular: null,\n        airingToday: null,\n        loading: true,\n        error: null\n    }\n\n    async componentDidMount() {\n        try {\n            const { data: { results: popular } } = await tvApi.popular();\n            const { data: { results: airingToday } } = await tvApi.airingToday();\n            this.setState({ popular, airingToday })\n        } catch {\n            this.setState({ error: \"Can't find it\" })\n        } finally {\n            this.setState({ loading: false })\n        }\n    }\n\n    render() {\n        const { popular, airingToday, loading, error } = this.state;\n        return (\n            <TVPresenter\n                popular={popular}\n                airingToday={airingToday}\n                loading={loading}\n                error={error}\n            />\n        );\n    }\n}","import Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Section from \"Components/Section\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\npadding: 10px;\n`;\n\nconst Form = styled.form`\n    margin-bottom:50px;\n    width:100%;\n    `;\n\nconst Input = styled.input`\n    all: unset;\n    font-size:32px;\n    width:100%;\n    text-align:center;\n    `;\n\nconst SearchPresenter = ({ movieResults,\n    tvResults,\n    searchWord,\n    loading,\n    error,\n    handleSubmit,\n    updateWord }) => (\n    <>\n        <Helmet><title>Search | JayTV</title></Helmet>\n        {<Container>\n            <Form onSubmit={handleSubmit}>\n                <Input\n                    placeholder=\"Search\"\n                    value={searchWord}\n                    onChange={updateWord} />\n            </Form>\n            {loading ? <Loader /> : (\n                <>\n                    {movieResults && movieResults.length > 0 && (\n                        <Section title=\"Movie\">\n                            {movieResults.map(movie =>\n                                <Poster\n                                    key={movie.id}\n                                    id={movie.id}\n                                    imageUrl={movie.poster_path}\n                                    title={movie.title}\n                                    rating={movie.vote_average}\n                                    year={movie.release_date.substring(0, 4)}\n                                    isMovie={true}\n                                />)}\n                        </Section>\n                    )}\n                    {tvResults && tvResults.length > 0 && (\n                        <Section title=\"TV\">\n                            {tvResults.map(tv =>\n                                <Poster key={tv.id}\n                                    id={tv.id}\n                                    imageUrl={tv.poster_path}\n                                    title={tv.name}\n                                    rating={tv.vote_average}\n                                    year={tv.first_air_date.substring(0, 4)}\n                                />)}\n                        </Section>\n                    )}\n                    {error && <Message color=\"red\" text={error} />}\n                    {movieResults && tvResults && movieResults.length === 0 && tvResults.length === 0 && (<Message color=\"grey\" text=\"Not Found \" />)}\n                </>\n            )}\n        </Container>}\n    </>)\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    searchWord: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired\n}\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import { movieApi, tvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class extends React.Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchWord: \"\",\n        loading: false,\n        error: null\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const { searchWord } = this.state;\n        console.log(searchWord);\n        if (searchWord !== \"\") {\n            this.searching();\n        }\n    }\n\n    updateWord = event => {\n        const { target: { value } } = event;\n        console.log(value)\n        this.setState({\n            searchWord: value\n        })\n    }\n\n    async searching() {\n        const { searchWord } = this.state;\n        this.setState({ loading: true });\n        try {\n            const { data: { results: movieResults } } = await movieApi.search(searchWord);\n            const { data: { results: tvResults } } = await tvApi.search(searchWord);\n            this.setState({ movieResults, tvResults });\n        } catch {\n            this.setState({ error: \"Can't find it\" });\n        } finally {\n            this.setState({ loading: false });\n        }\n    }\n\n    render() {\n        const { movieResults, tvResults, searchWord, loading, error } = this.state;\n        return (\n            <SearchPresenter\n                movieResults={movieResults}\n                tvResults={tvResults}\n                searchWord={searchWord}\n                loading={loading}\n                error={error}\n                handleSubmit={this.handleSubmit}\n                updateWord={this.updateWord}\n            />\n        );\n    }\n}","import Loader from \"Components/Loader\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 14px;\n  opacity: 0.8;\n  line-height: 1.5;\n  width: 80%;\n`;\n\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet><title>Loading | JayTV</title></Helmet>\n      <Loader />\n    </>\n  ) : (\n      <Container>\n        <Helmet>\n          <title>\n            {result.title\n              ? result.title\n              : result.name} | JayTV\n          </title>\n        </Helmet>\n        <Backdrop\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n        />\n        <Content>\n          <Cover\n            bgImage={\n              result.poster_path\n                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                : require(\"../../assets/noPosterSmall.png\")\n            }\n          />\n          <Data>\n            <Title>\n              {result.title\n                ? result.title\n                : result.name}\n            </Title>\n            <ItemContainer>\n              <Item>\n                {result.release_date\n                  ? result.release_date.substring(0, 4)\n                  : result.first_air_date.substring(0, 4)}\n              </Item>\n              <Divider>•</Divider>\n              <Item>\n                {result.runtime === 0 || null ?\n                  result.runtime = \"0\" :\n                  result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n              <Divider>•</Divider>\n              <Item>\n                {result.genres &&\n                  result.genres.map((genre, index) =>\n                    index === result.genres.length - 1\n                      ? genre.name\n                      : `${genre.name} / `\n                  )}\n              </Item>\n            </ItemContainer>\n            <Overview>{result.overview}</Overview>\n          </Data>\n        </Content>\n      </Container>\n    );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n}\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;","import { movieApi, tvApi } from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        const { location: { pathname } } = props;\n        this.state = { result: null, error: null, loading: true, isMovie: pathname.includes(\"/movie/\") }\n    }\n\n    async componentDidMount() {\n        const { match: { params: { id } }, history: { push } } = this.props;\n        const { isMovie } = this.state;\n        const parsedId = parseInt(id);\n        if (isNaN(parsedId)) {\n            return push(\"/\")\n        }\n        let result = null;\n        try {\n            if (isMovie) {\n                ({ data: result } = await movieApi.detail(parsedId));\n            } else {\n                ({ data: result } = await tvApi.detail(parsedId));\n            }\n        } catch {\n            this.setState({ error: \"Can't find it\" })\n        } finally {\n            this.setState({ loading: false, result })\n        }\n    }\n\n    render() {\n        const { result, error, loading } = this.state;\n        console.log(result);\n        return (\n            <DetailPresenter\n                result={result}\n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}","import { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n    <Router>\n        <Header />\n        <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/tv\" exact component={TV} />\n            <Route path=\"/search\" component={Search} />\n            <Route path=\"/movie/:id\" component={Detail} />\n            <Route path=\"/tv/:id\" component={Detail} />\n            <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n    </Router>\n);","import { createGlobalStyle } from \"styled-components\";\nimport resetCss from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${resetCss};\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        background-color:rgba(20,20,20,1);\n        color:white;\n        font-size:12px;\n        margin-top:50px;\n    }\n    a{\n        text-decoration: none;\n        color:inherit;\n    }\n`;\n\nexport default globalStyles;","import Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nconst App = () => (\n    <>\n        <Router />\n        <GlobalStyles />\n    </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}