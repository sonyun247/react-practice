{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Movie/MoviePresenter.js","Routes/Movie/index.js","Routes/Movie/MovieContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","assets/imdb.webp","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Header","styled","header","Lists","ul","List","li","props","current","LinkStyle","Link","withRouter","pathname","location","to","icon","faHome","faSearch","api","axios","create","baseURL","params","api_key","language","movieApi","get","id","append_to_response","word","query","tvApi","Container","div","Title","span","Grid","Section","title","children","grow","keyframes","Circle","InnerCircle","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","require","role","aria-label","length","substring","HomePresenter","popular","popularTv","error","loading","Helmet","Loader","map","movie","poster_path","vote_average","release_date","tv","name","first_air_date","HomeContainer","state","a","data","results","this","setState","React","Component","MoviePresenter","nowPlaying","upcoming","MovieContainer","TVPresenter","airingToday","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchWord","handleSubmit","updateWord","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","console","log","searching","target","Backdrop","bgImage","Contents","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","IMDB","img","Nav","TabWrapper","Tab","TabContents","TabContentGrid","TabContent","ContentImg","ContentText","DetailPresenter","result","externalId","tabName","useState","tab","setTab","tabData","setTabData","useEffect","production_companies","production_countries","seasons","selectTabs","useTabs","backdrop_path","imdb_id","href","src","Imdb","runtime","episode_run_time","genres","genre","index","overview","onClick","logo_path","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","Movie","TV","Search","Detail","from","globalStyles","createGlobalStyle","resetCss","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17919ebf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import styled from \"styled-components\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faHome } from '@fortawesome/free-solid-svg-icons';\nconst Header = styled.header`\n    z-index:99;\n    position:fixed;\n    top:0;\n    left:0;\n    width:100%;\n    height:50px;\n    display:flex;\n    align-items:center;\n    background-color:rgba(20,20,20,1);\n    box-shadow: 0px 1px 5px 2px rgba(0,0,0,0.8);\n`;\nconst Lists = styled.ul`\n    display:flex;\n    width:100%;\n`;\nconst List = styled.li`\n    width:80px;\n    height:50px;\n    text-align:center;\n    border-bottom:3px solid ${props => (props.current ? \"red\" : \"transparent\")};\n    color:${props => (props.current ? \"red\" : \"white\")};\n    transition: border-bottom .5s ease-out;\n    margin-right:20px;\n    :last-child{\n        position:absolute;\n        right:0;\n    }\n`;\nconst LinkStyle = styled(Link)`\n    height:50px;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    font-size:24px;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n    <Header>\n        <Lists>\n            <List current={pathname === \"/\"}>\n                <LinkStyle to=\"/\"><FontAwesomeIcon icon={faHome} /></LinkStyle>\n            </List>\n            <List current={pathname === \"/movie\"}>\n                <LinkStyle to=\"/movie\">Movie</LinkStyle>\n            </List>\n            <List current={pathname === \"/tv\"}>\n                <LinkStyle to=\"/tv\">TV</LinkStyle>\n            </List>\n            <List current={pathname === \"/search\"}>\n                <LinkStyle to=\"/search\"><FontAwesomeIcon icon={faSearch} /></LinkStyle>\n            </List>\n        </Lists>\n    </Header >\n)\n);","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"93c8583b27f220b561ce13f269823d8b\",\n        language: \"ko-KR\"\n    }\n});\n\nexport const movieApi = {\n    popular: () => api.get(\"movie/popular\"),\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    detail: id => api.get(`movie/${id}`, {\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: word => api.get(\"search/movie\", {\n        params: {\n            query: word\n        }\n    })\n};\n\nexport const tvApi = {\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    detail: id => api.get(`tv/${id}`, {\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    external: id => api.get(`tv/${id}/external_ids`),\n    search: word => api.get(\"search/tv\", {\n        params: {\n            query: word\n        }\n    })\n};\n","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    :not(:last-child){\n        margin-bottom:20px;\n    }\n`;\nconst Title = styled.span`\n    font-size:20px;\n    font-weight:600;\n`;\nconst Grid = styled.div`\n    margin-top:25px;\n    display:grid;\n    grid-template-columns:repeat(auto-fill,120px);\n    grid-auto-columns:120px;\n    grid-gap:20px;\n    grid-auto-flow:column;\n    overflow:scroll;\n    ::-webkit-scrollbar{\n            display:none;\n        }\n    -ms-overflow-style:none;\n    scrollbar-width:none;\n`;\n\nconst Section = ({ title, children }) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n)\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Section;","import styled, { keyframes } from \"styled-components\";\nconst grow = keyframes`\n  0% {\n    transform: scale(0.2);\n    opacity: 1;\n  }\n  20% {\n    transform: scale(0.7);\n    opacity: 0.7;\n  }\n  40% {\n    transform: scale(1.3);\n    opacity: 0.5;\n  }\n  60% {\n    transform: scale(1.8);\n    opacity: 0.3;\n  }\n  80% {\n    transform: scale(2.3);\n    opacity: 0.1;\n  }\n  100% {\n    transform: scale(2.8);\n    opacity: 0;\n  }\n}`;\nconst Container = styled.div`\n    height:100vh;\n    width:100vw;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    font-size:48px;\n    animation: ${grow} 1.5s linear infinite;\n`;\nconst Circle = styled.div`\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    background: red;\n    width: 5vh;\n    height: 5vh;\n    border-radius: 50%;\n`;\nconst InnerCircle = styled.div`\n    z-index:99;\n    background-color:rgba(20,20,20,1);\n    width: 4vh;\n    height: 4vh;\n    border-radius: 50%;\n`;\n\nexport default () => (\n    <Container>\n        <Circle><InnerCircle></InnerCircle></Circle>\n    </Container>\n)","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    display:flex;\n    justify-content:center;\n    width:100%;\n`;\nconst Text = styled.span`\n    color: ${props => props.color};\n    font-size:50px;\n`;\n\nconst Message = ({ text, color }) => (\n    <Container>\n        <Text color={color}>{text}</Text>\n    </Container>\n)\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n}\n\nexport default Message;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) =>\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">⭐️</span>\n          {rating}/10\n                </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n}\n\nexport default Poster;","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n    padding:20px;\n`;\n\nconst HomePresenter = ({ popular, popularTv, error, loading }) => (\n    <>\n        <Helmet>\n            <title>Home | JayTV</title>\n        </Helmet>\n        {loading ? <Loader /> : (\n            <Container>\n                {popular && popular.length > 0 && (\n                    <Section title=\"인기 영화\">\n                        {popular.map(movie => (<Poster\n                            key={movie.id}\n                            id={movie.id}\n                            imageUrl={movie.poster_path}\n                            title={movie.title}\n                            rating={movie.vote_average}\n                            year={movie.release_date.substring(0, 4)}\n                            isMovie={true}\n                        />))}\n                    </Section>\n                )}\n                {popularTv && popularTv.length > 0 && (\n                    <Section title=\"인기 쇼\">\n                        {popularTv.map(tv => (<Poster key={tv.id}\n                            id={tv.id}\n                            imageUrl={tv.poster_path}\n                            title={tv.name}\n                            rating={tv.vote_average}\n                            year={tv.first_air_date.substring(0, 4)}\n                        />))}\n                    </Section>\n                )}\n                {error && <Message color=\"red\" text={error} />}\n            </Container>\n        )}</>);\n\nHomePresenter.propTypes = {\n    popular: PropTypes.array,\n    popularTv: PropTypes.array,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired\n}\n\nexport default HomePresenter;","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import { movieApi, tvApi } from \"api\";\nimport React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\n\nexport default class extends React.Component {\n    state = {\n        popular: null,\n        popularTv: null,\n        error: null,\n        loading: true\n    }\n\n    async componentDidMount() {\n        try {\n            const { data: { results: popular } } = await movieApi.popular();\n            const { data: { results: popularTv } } = await tvApi.popular();\n            this.setState({ popular, popularTv });\n        } catch {\n            this.setState({ error: \"Can't find it\" });\n        } finally {\n            this.setState({ loading: false });\n        }\n    }\n\n    render() {\n        const { popular, popularTv, error, loading } = this.state;\n        return (\n            <HomePresenter\n                popular={popular}\n                popularTv={popularTv}\n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n    padding:20px;\n`;\n\nconst MoviePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\n    <>\n        <Helmet>\n            <title>Movie | JayTV</title>\n        </Helmet>\n        {loading ? <Loader /> : (\n            <Container>\n                {nowPlaying && nowPlaying.length > 0 && (\n                    <Section title=\"상영 중\">\n                        {nowPlaying.map(movie => (<Poster\n                            key={movie.id}\n                            id={movie.id}\n                            imageUrl={movie.poster_path}\n                            title={movie.title}\n                            rating={movie.vote_average}\n                            year={movie.release_date.substring(0, 4)}\n                            isMovie={true}\n                        />))}\n                    </Section>\n                )}\n                {upcoming && upcoming.length > 0 && (\n                    <Section title=\"개봉 예정\">\n                        {upcoming.map(movie => (<Poster\n                            key={movie.id}\n                            id={movie.id}\n                            imageUrl={movie.poster_path}\n                            title={movie.title}\n                            rating={movie.vote_average}\n                            year={movie.release_date.substring(0, 4)}\n                            isMovie={true}\n                        />))}\n                    </Section>\n                )}\n                {popular && popular.length > 0 && (\n                    <Section title=\"인기\">\n                        {popular.map(movie => (<Poster\n                            key={movie.id}\n                            id={movie.id}\n                            imageUrl={movie.poster_path}\n                            title={movie.title}\n                            rating={movie.vote_average}\n                            year={movie.release_date.substring(0, 4)}\n                            isMovie={true}\n                        />))}\n                    </Section>\n                )}\n                {error && <Message color=\"red\" text={error} />}\n            </Container>\n        )}</>);\n\nMoviePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    upcoming: PropTypes.array,\n    popular: PropTypes.array,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired\n}\n\nexport default MoviePresenter;","import MovieContainer from \"./MovieContainer\";\n\nexport default MovieContainer;","import { movieApi } from \"api\";\nimport React from \"react\";\nimport MoviePresenter from \"./MoviePresenter\";\n\nexport default class extends React.Component {\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true\n    }\n\n    async componentDidMount() {\n        try {\n            const { data: { results: popular } } = await movieApi.popular();\n            const { data: { results: nowPlaying } } = await movieApi.nowPlaying();\n            const { data: { results: upcoming } } = await movieApi.upcoming();\n            this.setState({ popular, nowPlaying, upcoming });\n        } catch {\n            this.setState({ error: \"Can't find it\" });\n        } finally {\n            this.setState({ loading: false });\n        }\n    }\n\n    render() {\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        return (\n            <MoviePresenter\n                nowPlaying={nowPlaying}\n                upcoming={upcoming}\n                popular={popular}\n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n    padding:20px;\n`;\n\nconst TVPresenter = ({ popular, airingToday, loading, error }) => (<>\n    <Helmet><title>TV | JayTV</title></Helmet>\n    {loading ? <Loader /> : (\n        <Container>\n            {popular && popular.length > 0 && (\n                <Section title=\"인기\">\n                    {popular.map(tv => (<Poster key={tv.id}\n                        id={tv.id}\n                        imageUrl={tv.poster_path}\n                        title={tv.name}\n                        rating={tv.vote_average}\n                        year={tv.first_air_date.substring(0, 4)}\n                    />))}\n                </Section>\n            )}\n            {airingToday && airingToday.length > 0 && (\n                <Section title=\"오늘의 편성\">\n                    {airingToday.map(tv => (<Poster key={tv.id}\n                        id={tv.id}\n                        imageUrl={tv.poster_path}\n                        title={tv.name}\n                        rating={tv.vote_average}\n                        year={tv.first_air_date.substring(0, 4)}\n                    />))}\n                </Section>\n            )}\n            {error && <Message color=\"red\" text={error} />}\n        </Container>\n    )}</>)\n\nTVPresenter.propTypes = {\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n}\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import { tvApi } from \"api\";\nimport React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\n\nexport default class extends React.Component {\n    state = {\n        popular: null,\n        airingToday: null,\n        loading: true,\n        error: null\n    }\n\n    async componentDidMount() {\n        try {\n            const { data: { results: popular } } = await tvApi.popular();\n            const { data: { results: airingToday } } = await tvApi.airingToday();\n            this.setState({ popular, airingToday })\n        } catch {\n            this.setState({ error: \"Can't find it\" })\n        } finally {\n            this.setState({ loading: false })\n        }\n    }\n\n    render() {\n        const { popular, airingToday, loading, error } = this.state;\n        return (\n            <TVPresenter\n                popular={popular}\n                airingToday={airingToday}\n                loading={loading}\n                error={error}\n            />\n        );\n    }\n}","import Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Section from \"Components/Section\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\npadding: 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom:50px;\n    width:100%;\n    `;\n\nconst Input = styled.input`\n    all: unset;\n    font-size:32px;\n    width:100%;\n    text-align:center;\n    `;\n\nconst SearchPresenter = ({ movieResults,\n    tvResults,\n    searchWord,\n    loading,\n    error,\n    handleSubmit,\n    updateWord }) => (\n    <>\n        <Helmet><title>Search | JayTV</title></Helmet>\n        {<Container>\n            <Form onSubmit={handleSubmit}>\n                <Input\n                    placeholder=\"Search\"\n                    value={searchWord}\n                    onChange={updateWord} />\n            </Form>\n            {loading ? <Loader /> : (\n                <>\n                    {movieResults && movieResults.length > 0 && (\n                        <Section title=\"Movie\">\n                            {movieResults.map(movie =>\n                                <Poster\n                                    key={movie.id}\n                                    id={movie.id}\n                                    imageUrl={movie.poster_path}\n                                    title={movie.title}\n                                    rating={movie.vote_average}\n                                    year={movie.release_date.substring(0, 4)}\n                                    isMovie={true}\n                                />)}\n                        </Section>\n                    )}\n                    {tvResults && tvResults.length > 0 && (\n                        <Section title=\"TV\">\n                            {tvResults.map(tv =>\n                                <Poster key={tv.id}\n                                    id={tv.id}\n                                    imageUrl={tv.poster_path}\n                                    title={tv.name}\n                                    rating={tv.vote_average}\n                                    year={tv.first_air_date.substring(0, 4)}\n                                />)}\n                        </Section>\n                    )}\n                    {error && <Message color=\"red\" text={error} />}\n                    {movieResults && tvResults && movieResults.length === 0 && tvResults.length === 0 && (<Message color=\"grey\" text=\"Not Found \" />)}\n                </>\n            )}\n        </Container>}\n    </>)\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    searchWord: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired\n}\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import { movieApi, tvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class extends React.Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchWord: \"\",\n        loading: false,\n        error: null\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const { searchWord } = this.state;\n        console.log(searchWord);\n        if (searchWord !== \"\") {\n            this.searching();\n        }\n    }\n\n    updateWord = event => {\n        const { target: { value } } = event;\n        console.log(value)\n        this.setState({\n            searchWord: value\n        })\n    }\n\n    async searching() {\n        const { searchWord } = this.state;\n        this.setState({ loading: true });\n        try {\n            const { data: { results: movieResults } } = await movieApi.search(searchWord);\n            const { data: { results: tvResults } } = await tvApi.search(searchWord);\n            this.setState({ movieResults, tvResults });\n        } catch {\n            this.setState({ error: \"Can't find it\" });\n        } finally {\n            this.setState({ loading: false });\n        }\n    }\n\n    render() {\n        const { movieResults, tvResults, searchWord, loading, error } = this.state;\n        return (\n            <SearchPresenter\n                movieResults={movieResults}\n                tvResults={tvResults}\n                searchWord={searchWord}\n                loading={loading}\n                error={error}\n                handleSubmit={this.handleSubmit}\n                updateWord={this.updateWord}\n            />\n        );\n    }\n}","export default __webpack_public_path__ + \"static/media/imdb.dc688792.webp\";","import Loader from \"Components/Loader\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\nimport Imdb from \"assets/imdb.webp\";\nimport { useEffect, useState } from \"react\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 20px 50px;\n  overflow:hidden;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px) grayscale(70%);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Contents = styled.div`\n  display: flex;\n  flex-direction:column;\n  height: 100%;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n`;\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 30px;\n`;\n\nconst Title = styled.h3`\n  width:80%;\n  font-size: 32px;\n  display:flex;\n  justify-content:space-between;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 14px;\n  opacity: 1;\n  line-height: 1.5;\n  width: 80%;\n`;\n\nconst IMDB = styled.img`\n  height:inherit;\n  width:60px;\n`;\n\nconst Nav = styled.div`\nmargin-bottom:30px;\nfont-size:16px;\nopacity:0.8;\n`;\n\nconst TabWrapper = styled.div`\nwidth:80%;\nmargin-top:30px;\ndisplay:flex;\njustify-content:space-between;\n`;\nconst Tab = styled.div`\n  height:25px;\n  width:50%;\n  border:1px solid white;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  font-size:16px;\n  letter-spacing:5px;\n  cursor: pointer;\n`;\n\nconst TabContents = styled.div`\nwidth:80%;\nheight:100%;\nmargin-top:30px;\noverflow:scroll;\n::-webkit-scrollbar{\n            display:none;\n}\n-ms-overflow-style:none;\nscrollbar-width:none;\n`;\nconst TabContentGrid = styled.div`\ndisplay:grid;\ngrid-auto-flow:column;\ngrid-template-columns:repeat(auto-fill,200px);\ngrid-auto-columns:200px;\ngrid-template-rows:repeat(auto-fill,minmax(max-content,300px));\ngrid-gap:20px;\n`;\nconst TabContent = styled.div`\nheight:100%;\nwidth:100%;\ndisplay:flex;\nflex-direction:column;\njustify-content:space-around;\nalign-items:center;\n`;\nconst ContentImg = styled.div`\nborder-radius:25px;\nheight:100%;\nwidth:100%;\nbackground-image:url(${props => props.bgUrl});\nbackground-size:auto;\nbackground-repeat:no-repeat;\nbackground-position:center center;\n`;\nconst ContentText = styled.div`\nmargin-top:10px;\nfont-size:16px;\ntext-align:center;\n`;\n\n\nconst useTabs = (tabName, result) => {\n  const [tab, setTab] = useState();\n  const [tabData, setTabData] = useState([]);\n  const selectTabs = tabName => {\n    setTab(tabName);\n  }\n  useEffect(() => {\n    switch (tab) {\n      case \"company\":\n        setTabData(result.production_companies);\n        break;\n      case \"country\":\n        setTabData(result.production_countries);\n        break;\n      case \"seasons\":\n        setTabData(result.seasons);\n        break;\n    }\n  }, [tab])\n  console.log(tabData);\n  return { tabData, selectTabs }\n}\nconst DetailPresenter = ({ result, externalId, loading, error }) => {\n  let tabName;\n  const { tabData, selectTabs } = useTabs(tabName, result);\n  return (\n    loading ? (\n      <>\n        <Helmet><title>Loading | JayTV</title></Helmet>\n        <Loader />\n      </>\n    ) : (\n        <Container>\n          <Helmet>\n            <title>\n              {result.title\n                ? result.title\n                : result.name} | JayTV\n          </title>\n          </Helmet>\n          <Backdrop\n            bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n          />\n          < Contents >\n            <Nav>\n              {result.title\n                ? <><Link to=\"/movie\">Movie</Link>{` ❯ ${result.title}`}</>\n                : <><Link to=\"/tv\">TV</Link>{` ❯ ${result.name}`}</>}\n            </Nav>\n            <Content>\n              <Cover\n                bgImage={\n                  result.poster_path\n                    ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                    : require(\"../../assets/noPosterSmall.png\")\n                }\n              />\n              <Data>\n                <Title>\n                  {result.title\n                    ? result.title\n                    : result.name}\n                  {result.imdb_id\n                    ? <a href={`https://imdb.com/title/${result.imdb_id}`} target=\"_blank\"><IMDB src={Imdb} /></a>\n                    : <a href={`https://imdb.com/title/${externalId.imdb_id}`} target=\"_blank\"><IMDB src={Imdb} /></a>}\n                </Title>\n                <ItemContainer>\n                  <Item>\n                    {result.release_date\n                      ? result.release_date.substring(0, 4)\n                      : result.first_air_date.substring(0, 4)}\n                  </Item>\n                  <Divider>•</Divider>\n                  <Item>\n                    {result.runtime === 0 || null ?\n                      result.runtime = \"0\" :\n                      result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n                  <Divider>•</Divider>\n                  <Item>\n                    {result.genres &&\n                      result.genres.map((genre, index) =>\n                        index === result.genres.length - 1\n                          ? genre.name\n                          : `${genre.name} / `\n                      )}\n                  </Item>\n                </ItemContainer>\n                <Overview>{`${result.overview.substring(0, 180)}...`}</Overview>\n                <TabWrapper>\n                  {result.seasons ? (\n                    <>\n                      <Tab onClick={() => selectTabs(\"company\")}>제작</Tab>\n                      <Tab onClick={() => selectTabs(\"country\")}>국가</Tab>\n                      <Tab onClick={() => selectTabs(\"seasons\")}>시즌</Tab>\n                    </>\n                  ) : (\n                      <>\n                        <Tab onClick={() => selectTabs(\"company\")}>제작</Tab>\n                        <Tab onClick={() => selectTabs(\"country\")}>국가</Tab>\n                      </>\n                    )\n                  }\n                </TabWrapper>\n                <TabContents>\n                  {tabData && tabData.length > 0 && (\n                    <TabContentGrid>\n                      {tabData.map(data => (\n                        <TabContent key={data.id}>\n                          <ContentImg bgUrl={data.logo_path\n                            ? `https://image.tmdb.org/t/p/w200${data.logo_path}`\n                            : `https://image.tmdb.org/t/p/w200${data.poster_path}`\n                          } />\n                          <ContentText>{data.name}</ContentText>\n                        </TabContent>\n                      ))}\n                    </TabContentGrid>)}\n                </TabContents>\n              </Data>\n            </Content>\n          </Contents>\n        </Container >\n      ))\n}\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  externalId: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n}\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;","import { movieApi, tvApi } from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        const { location: { pathname } } = props;\n        this.state = { result: null, externalId: null, error: null, loading: true, isMovie: pathname.includes(\"/movie/\") }\n    }\n\n    async componentDidMount() {\n        const { match: { params: { id } }, history: { push } } = this.props;\n        const { isMovie } = this.state;\n        const parsedId = parseInt(id);\n        if (isNaN(parsedId)) {\n            return push(\"/\")\n        }\n        let result = null;\n        let externalId = null;\n        try {\n            if (isMovie) {\n                ({ data: result } = await movieApi.detail(parsedId));\n            } else {\n                ({ data: result } = await tvApi.detail(parsedId));\n                ({ data: externalId } = await tvApi.external(parsedId));\n            }\n        } catch {\n            this.setState({ error: \"Can't find it\" })\n        } finally {\n            this.setState({ loading: false, result, externalId })\n        }\n    }\n\n    render() {\n        const { result, externalId, error, loading } = this.state;\n        return (\n            <DetailPresenter\n                result={result}\n                externalId={externalId}\n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}","import { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Home from \"Routes/Home\";\nimport Movie from \"Routes/Movie\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n    <Router>\n        <Header />\n        <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/movie\" exact component={Movie} />\n            <Route path=\"/tv\" exact component={TV} />\n            <Route path=\"/search\" component={Search} />\n            <Route path=\"/movie/:id\" component={Detail} />\n            <Route path=\"/tv/:id\" component={Detail} />\n            <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n    </Router>\n);","import { createGlobalStyle } from \"styled-components\";\nimport resetCss from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${resetCss};\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        background-color:rgba(20,20,20,1);\n        color:white;\n        font-size:12px;\n        margin-top:50px;\n    }\n    a{\n        text-decoration: none;\n        color:inherit;\n    }\n`;\n\nexport default globalStyles;","import Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nconst App = () => (\n    <>\n        <Router />\n        <GlobalStyles />\n    </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}