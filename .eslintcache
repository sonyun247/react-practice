[{"/Users/ian-mac/Documents/GitHub/react-practice/src/index.js":"1","/Users/ian-mac/Documents/GitHub/react-practice/src/Components/App.js":"2","/Users/ian-mac/Documents/GitHub/react-practice/src/Components/Router.js":"3","/Users/ian-mac/Documents/GitHub/react-practice/src/Components/Header.js":"4","/Users/ian-mac/Documents/GitHub/react-practice/src/Components/GlobalStyles.js":"5","/Users/ian-mac/Documents/GitHub/react-practice/src/api.js":"6","/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/Search/index.js":"7","/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/Detail/DetailContainer.js":"8","/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/Search/SearchContainer.js":"9","/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/TV/TVContainer.js":"10","/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/TV/TVPresenter.js":"11","/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/Search/SearchPresenter.js":"12","/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/Detail/DetailPresenter.js":"13","/Users/ian-mac/Documents/GitHub/react-practice/src/Components/Section.js":"14","/Users/ian-mac/Documents/GitHub/react-practice/src/Components/Message.js":"15","/Users/ian-mac/Documents/GitHub/react-practice/src/Components/Poster.js":"16","/Users/ian-mac/Documents/GitHub/react-practice/src/Components/Loader.js":"17","/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/Detail/index.js":"18","/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/TV/index.js":"19","/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/Movie/index.js":"20","/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/Movie/MoviePresenter.js":"21","/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/Home/index.js":"22","/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/Home/HomeContainer.js":"23","/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/Home/HomePresenter.js":"24"},{"size":156,"mtime":1612589861426,"results":"25","hashOfConfig":"26"},{"size":196,"mtime":1612449792067,"results":"27","hashOfConfig":"26"},{"size":766,"mtime":1613493932107,"results":"28","hashOfConfig":"26"},{"size":1722,"mtime":1613495069265,"results":"29","hashOfConfig":"26"},{"size":567,"mtime":1612892862206,"results":"30","hashOfConfig":"26"},{"size":996,"mtime":1613419703924,"results":"31","hashOfConfig":"26"},{"size":81,"mtime":1612601024108,"results":"32","hashOfConfig":"26"},{"size":1464,"mtime":1613479194970,"results":"33","hashOfConfig":"26"},{"size":1665,"mtime":1612883185154,"results":"34","hashOfConfig":"26"},{"size":967,"mtime":1612604635182,"results":"35","hashOfConfig":"26"},{"size":1710,"mtime":1613494809252,"results":"36","hashOfConfig":"26"},{"size":2885,"mtime":1613494648397,"results":"37","hashOfConfig":"26"},{"size":7449,"mtime":1613495904926,"results":"38","hashOfConfig":"26"},{"size":792,"mtime":1613492808240,"results":"39","hashOfConfig":"26"},{"size":528,"mtime":1612883238697,"results":"40","hashOfConfig":"26"},{"size":1774,"mtime":1613492780218,"results":"41","hashOfConfig":"26"},{"size":1062,"mtime":1613164223364,"results":"42","hashOfConfig":"26"},{"size":81,"mtime":1612601001407,"results":"43","hashOfConfig":"26"},{"size":69,"mtime":1612601037078,"results":"44","hashOfConfig":"26"},{"size":78,"mtime":1613493775308,"results":"45","hashOfConfig":"26"},{"size":2675,"mtime":1613494962456,"results":"46","hashOfConfig":"26"},{"size":75,"mtime":1613494145795,"results":"47","hashOfConfig":"26"},{"size":973,"mtime":1613494465030,"results":"48","hashOfConfig":"26"},{"size":1940,"mtime":1613494625150,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1ilgpcq",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"75"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"55"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"55"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"52"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ian-mac/Documents/GitHub/react-practice/src/index.js",[],["110","111"],"/Users/ian-mac/Documents/GitHub/react-practice/src/Components/App.js",[],["112","113"],"/Users/ian-mac/Documents/GitHub/react-practice/src/Components/Router.js",["114"],"import { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Home from \"Routes/Home\";\nimport Movie from \"Routes/Movie\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n    <Router>\n        <Header />\n        <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/movie\" exact component={Movie} />\n            <Route path=\"/tv\" exact component={TV} />\n            <Route path=\"/search\" component={Search} />\n            <Route path=\"/movie/:id\" component={Detail} />\n            <Route path=\"/tv/:id\" component={Detail} />\n            <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n    </Router>\n);","/Users/ian-mac/Documents/GitHub/react-practice/src/Components/Header.js",[],"/Users/ian-mac/Documents/GitHub/react-practice/src/Components/GlobalStyles.js",[],["115","116"],"/Users/ian-mac/Documents/GitHub/react-practice/src/api.js",[],"/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/Search/index.js",[],["117","118"],"/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/Detail/DetailContainer.js",["119"],"import { movieApi, tvApi } from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        const { location: { pathname } } = props;\n        this.state = { result: null, externalId: null, error: null, loading: true, isMovie: pathname.includes(\"/movie/\") }\n    }\n\n    async componentDidMount() {\n        const { match: { params: { id } }, history: { push } } = this.props;\n        const { isMovie } = this.state;\n        const parsedId = parseInt(id);\n        if (isNaN(parsedId)) {\n            return push(\"/\")\n        }\n        let result = null;\n        let externalId = null;\n        try {\n            if (isMovie) {\n                ({ data: result } = await movieApi.detail(parsedId));\n            } else {\n                ({ data: result } = await tvApi.detail(parsedId));\n                ({ data: externalId } = await tvApi.external(parsedId));\n            }\n        } catch {\n            this.setState({ error: \"Can't find it\" })\n        } finally {\n            this.setState({ loading: false, result, externalId })\n        }\n    }\n\n    render() {\n        const { result, externalId, error, loading } = this.state;\n        return (\n            <DetailPresenter\n                result={result}\n                externalId={externalId}\n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}","/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/Search/SearchContainer.js",["120"],"import { movieApi, tvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class extends React.Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchWord: \"\",\n        loading: false,\n        error: null\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const { searchWord } = this.state;\n        console.log(searchWord);\n        if (searchWord !== \"\") {\n            this.searching();\n        }\n    }\n\n    updateWord = event => {\n        const { target: { value } } = event;\n        console.log(value)\n        this.setState({\n            searchWord: value\n        })\n    }\n\n    async searching() {\n        const { searchWord } = this.state;\n        this.setState({ loading: true });\n        try {\n            const { data: { results: movieResults } } = await movieApi.search(searchWord);\n            const { data: { results: tvResults } } = await tvApi.search(searchWord);\n            this.setState({ movieResults, tvResults });\n        } catch {\n            this.setState({ error: \"Can't find it\" });\n        } finally {\n            this.setState({ loading: false });\n        }\n    }\n\n    render() {\n        const { movieResults, tvResults, searchWord, loading, error } = this.state;\n        return (\n            <SearchPresenter\n                movieResults={movieResults}\n                tvResults={tvResults}\n                searchWord={searchWord}\n                loading={loading}\n                error={error}\n                handleSubmit={this.handleSubmit}\n                updateWord={this.updateWord}\n            />\n        );\n    }\n}",["121","122"],"/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/TV/TVContainer.js",["123"],"import { tvApi } from \"api\";\nimport React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\n\nexport default class extends React.Component {\n    state = {\n        popular: null,\n        airingToday: null,\n        loading: true,\n        error: null\n    }\n\n    async componentDidMount() {\n        try {\n            const { data: { results: popular } } = await tvApi.popular();\n            const { data: { results: airingToday } } = await tvApi.airingToday();\n            this.setState({ popular, airingToday })\n        } catch {\n            this.setState({ error: \"Can't find it\" })\n        } finally {\n            this.setState({ loading: false })\n        }\n    }\n\n    render() {\n        const { popular, airingToday, loading, error } = this.state;\n        return (\n            <TVPresenter\n                popular={popular}\n                airingToday={airingToday}\n                loading={loading}\n                error={error}\n            />\n        );\n    }\n}","/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/TV/TVPresenter.js",[],"/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/Search/SearchPresenter.js",[],"/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/Detail/DetailPresenter.js",["124","125","126","127"],"import Loader from \"Components/Loader\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\nimport Imdb from \"assets/imdb.webp\";\nimport { useEffect, useState } from \"react\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 20px 50px;\n  overflow:hidden;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px) grayscale(70%);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Contents = styled.div`\n  display: flex;\n  flex-direction:column;\n  height: 100%;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n`;\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 30px;\n`;\n\nconst Title = styled.h3`\n  width:80%;\n  font-size: 32px;\n  display:flex;\n  justify-content:space-between;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 14px;\n  opacity: 1;\n  line-height: 1.5;\n  width: 80%;\n`;\n\nconst IMDB = styled.img`\n  height:inherit;\n  width:60px;\n`;\n\nconst Nav = styled.div`\nmargin-bottom:30px;\nfont-size:16px;\nopacity:0.8;\n`;\n\nconst TabWrapper = styled.div`\nwidth:80%;\nmargin-top:30px;\ndisplay:flex;\njustify-content:space-between;\n`;\nconst Tab = styled.div`\n  height:25px;\n  width:50%;\n  border:1px solid white;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  font-size:16px;\n  letter-spacing:5px;\n  cursor: pointer;\n`;\n\nconst TabContents = styled.div`\nwidth:80%;\nheight:100%;\nmargin-top:30px;\noverflow:scroll;\n`;\nconst TabContentGrid = styled.div`\ndisplay:grid;\ngrid-auto-flow:column;\ngrid-template-columns:repeat(auto-fill,200px);\ngrid-auto-columns:200px;\ngrid-template-rows:repeat(auto-fill,minmax(max-content,300px));\ngrid-gap:20px;\n`;\nconst TabContent = styled.div`\nheight:100%;\nwidth:100%;\ndisplay:flex;\nflex-direction:column;\njustify-content:space-around;\nalign-items:center;\n`;\nconst ContentImg = styled.div`\nborder-radius:25px;\nheight:100%;\nwidth:100%;\nbackground-image:url(${props => props.bgUrl});\nbackground-size:auto;\nbackground-repeat:no-repeat;\nbackground-position:center center;\n`;\nconst ContentText = styled.div`\nmargin-top:10px;\nfont-size:16px;\ntext-align:center;\n`;\n\n\nconst useTabs = (tabName, result) => {\n  const [tab, setTab] = useState();\n  const [tabData, setTabData] = useState([]);\n  const selectTabs = tabName => {\n    setTab(tabName);\n  }\n  useEffect(() => {\n    switch (tab) {\n      case \"company\":\n        setTabData(result.production_companies);\n        break;\n      case \"country\":\n        setTabData(result.production_countries);\n        break;\n      case \"seasons\":\n        setTabData(result.seasons);\n        break;\n    }\n  }, [tab])\n  console.log(tabData);\n  return { tabData, selectTabs }\n}\nconst DetailPresenter = ({ result, externalId, loading, error }) => {\n  let tabName;\n  const { tabData, selectTabs } = useTabs(tabName, result);\n  return (\n    loading ? (\n      <>\n        <Helmet><title>Loading | JayTV</title></Helmet>\n        <Loader />\n      </>\n    ) : (\n        <Container>\n          <Helmet>\n            <title>\n              {result.title\n                ? result.title\n                : result.name} | JayTV\n          </title>\n          </Helmet>\n          <Backdrop\n            bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n          />\n          < Contents >\n            <Nav>\n              {result.title\n                ? <><Link to=\"/movie\">Movie</Link>{` ❯ ${result.title}`}</>\n                : <><Link to=\"/tv\">TV</Link>{` ❯ ${result.name}`}</>}\n            </Nav>\n            <Content>\n              <Cover\n                bgImage={\n                  result.poster_path\n                    ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                    : require(\"../../assets/noPosterSmall.png\")\n                }\n              />\n              <Data>\n                <Title>\n                  {result.title\n                    ? result.title\n                    : result.name}\n                  {result.imdb_id\n                    ? <a href={`https://imdb.com/title/${result.imdb_id}`} target=\"_blank\"><IMDB src={Imdb} /></a>\n                    : <a href={`https://imdb.com/title/${externalId.imdb_id}`} target=\"_blank\"><IMDB src={Imdb} /></a>}\n                </Title>\n                <ItemContainer>\n                  <Item>\n                    {result.release_date\n                      ? result.release_date.substring(0, 4)\n                      : result.first_air_date.substring(0, 4)}\n                  </Item>\n                  <Divider>•</Divider>\n                  <Item>\n                    {result.runtime === 0 || null ?\n                      result.runtime = \"0\" :\n                      result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n                  <Divider>•</Divider>\n                  <Item>\n                    {result.genres &&\n                      result.genres.map((genre, index) =>\n                        index === result.genres.length - 1\n                          ? genre.name\n                          : `${genre.name} / `\n                      )}\n                  </Item>\n                </ItemContainer>\n                <Overview>{`${result.overview.substring(0, 180)}...`}</Overview>\n                <TabWrapper>\n                  {result.seasons ? (\n                    <>\n                      <Tab onClick={() => selectTabs(\"company\")}>제작</Tab>\n                      <Tab onClick={() => selectTabs(\"country\")}>국가</Tab>\n                      <Tab onClick={() => selectTabs(\"seasons\")}>시즌</Tab>\n                    </>\n                  ) : (\n                      <>\n                        <Tab onClick={() => selectTabs(\"company\")}>제작</Tab>\n                        <Tab onClick={() => selectTabs(\"country\")}>국가</Tab>\n                      </>\n                    )\n                  }\n                </TabWrapper>\n                <TabContents>\n                  {tabData && tabData.length > 0 && (\n                    <TabContentGrid>\n                      {tabData.map(data => (\n                        <TabContent key={data.id}>\n                          <ContentImg bgUrl={data.logo_path\n                            ? `https://image.tmdb.org/t/p/w200${data.logo_path}`\n                            : `https://image.tmdb.org/t/p/w200${data.poster_path}`\n                          } />\n                          <ContentText>{data.name}</ContentText>\n                        </TabContent>\n                      ))}\n                    </TabContentGrid>)}\n                </TabContents>\n              </Data>\n            </Content>\n          </Contents>\n        </Container >\n      ))\n}\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  externalId: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n}\n\nexport default DetailPresenter;","/Users/ian-mac/Documents/GitHub/react-practice/src/Components/Section.js",[],"/Users/ian-mac/Documents/GitHub/react-practice/src/Components/Message.js",[],"/Users/ian-mac/Documents/GitHub/react-practice/src/Components/Poster.js",[],"/Users/ian-mac/Documents/GitHub/react-practice/src/Components/Loader.js",["128"],"import styled, { keyframes } from \"styled-components\";\nconst grow = keyframes`\n  0% {\n    transform: scale(0.2);\n    opacity: 1;\n  }\n  20% {\n    transform: scale(0.7);\n    opacity: 0.7;\n  }\n  40% {\n    transform: scale(1.3);\n    opacity: 0.5;\n  }\n  60% {\n    transform: scale(1.8);\n    opacity: 0.3;\n  }\n  80% {\n    transform: scale(2.3);\n    opacity: 0.1;\n  }\n  100% {\n    transform: scale(2.8);\n    opacity: 0;\n  }\n}`;\nconst Container = styled.div`\n    height:100vh;\n    width:100vw;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    font-size:48px;\n    animation: ${grow} 1.5s linear infinite;\n`;\nconst Circle = styled.div`\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    background: red;\n    width: 5vh;\n    height: 5vh;\n    border-radius: 50%;\n`;\nconst InnerCircle = styled.div`\n    z-index:99;\n    background-color:rgba(20,20,20,1);\n    width: 4vh;\n    height: 4vh;\n    border-radius: 50%;\n`;\n\nexport default () => (\n    <Container>\n        <Circle><InnerCircle></InnerCircle></Circle>\n    </Container>\n)","/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/Detail/index.js",[],"/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/TV/index.js",[],"/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/Movie/index.js",[],"/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/Movie/MoviePresenter.js",[],"/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/Home/index.js",[],"/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/Home/HomeContainer.js",["129"],"import { movieApi, tvApi } from \"api\";\nimport React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\n\nexport default class extends React.Component {\n    state = {\n        popular: null,\n        popularTv: null,\n        error: null,\n        loading: true\n    }\n\n    async componentDidMount() {\n        try {\n            const { data: { results: popular } } = await movieApi.popular();\n            const { data: { results: popularTv } } = await tvApi.popular();\n            this.setState({ popular, popularTv });\n        } catch {\n            this.setState({ error: \"Can't find it\" });\n        } finally {\n            this.setState({ loading: false });\n        }\n    }\n\n    render() {\n        const { popular, popularTv, error, loading } = this.state;\n        return (\n            <HomePresenter\n                popular={popular}\n                popularTv={popularTv}\n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}","/Users/ian-mac/Documents/GitHub/react-practice/src/Routes/Home/HomePresenter.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"130","replacedBy":"134"},{"ruleId":"132","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":9,"column":1,"nodeType":"138","endLine":22,"endColumn":3},{"ruleId":"130","replacedBy":"139"},{"ruleId":"132","replacedBy":"140"},{"ruleId":"130","replacedBy":"141"},{"ruleId":"132","replacedBy":"142"},{"ruleId":"136","severity":1,"message":"143","line":5,"column":1,"nodeType":"138","endLine":46,"endColumn":2},{"ruleId":"136","severity":1,"message":"143","line":5,"column":1,"nodeType":"138","endLine":59,"endColumn":2},{"ruleId":"130","replacedBy":"144"},{"ruleId":"132","replacedBy":"145"},{"ruleId":"136","severity":1,"message":"143","line":5,"column":1,"nodeType":"138","endLine":36,"endColumn":2},{"ruleId":"146","severity":1,"message":"147","line":157,"column":5,"nodeType":"148","messageId":"149","endLine":167,"endColumn":6},{"ruleId":"150","severity":1,"message":"151","line":168,"column":6,"nodeType":"152","endLine":168,"endColumn":11,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":213,"column":76,"nodeType":"156","endLine":213,"endColumn":91},{"ruleId":"154","severity":1,"message":"155","line":214,"column":80,"nodeType":"156","endLine":214,"endColumn":95},{"ruleId":"136","severity":1,"message":"137","line":54,"column":1,"nodeType":"138","endLine":58,"endColumn":2},{"ruleId":"136","severity":1,"message":"143","line":5,"column":1,"nodeType":"138","endLine":36,"endColumn":2},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],["157"],["158"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["157"],["158"],["157"],["158"],"Unexpected default export of anonymous class",["157"],["158"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'result.production_companies', 'result.production_countries', and 'result.seasons'. Either include them or remove the dependency array. If 'setTabData' needs the current value of 'result.production_companies', you can also switch to useReducer instead of useState and read 'result.production_companies' in the reducer.","ArrayExpression",["159"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},"Update the dependencies array to be: [result.production_companies, result.production_countries, result.seasons, tab]",{"range":"162","text":"163"},[3224,3229],"[result.production_companies, result.production_countries, result.seasons, tab]"]